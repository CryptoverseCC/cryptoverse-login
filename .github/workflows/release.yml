name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  DOMAIN_LOGIN: login.cryptoverse.cc
  PROJECT: cryptoverse-login
  REGISTRY: registry.digitalocean.com/cryptoverse


jobs:
  release-login:
    runs-on: ubuntu-latest
    environment: Prod (do-sfo2-cryptoverse)
    steps:
      - uses: actions/checkout@v3
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 1200
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.4.0

      #############################
      # Cryptoverse Login Release #
      #############################
      - name: Install Cryptoverse Login
        run: |
          gpg --quiet --batch --yes --decrypt \
            --passphrase="${{ secrets.VALUES_ENCRYPTION_PASSPHRASE }}" \
            --output ./charts/login/values.prod.yaml ./charts/login/values.prod.yaml.gpg
          doctl kubernetes cluster kubeconfig save cryptoverse --expiry-seconds 300 --set-current-context
          helm upgrade --install --create-namespace --atomic --wait --timeout 10m \
            cryptoverse-login \
            ./charts/login/ \
            --namespace cryptoverse-login \
            -f ./charts/login/values.prod.yaml \
            --set version=${{ github.sha }}
      - name: Verify connectivity
        run: |
          sleep 60s
          curl https://${DOMAIN_LOGIN}/.well-known/openid-configuration -vk

  release-login-demo:
    runs-on: ubuntu-latest
    environment: Prod (do-sfo2-cryptoverse)
    steps:
      - uses: actions/checkout@v3
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 1200
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.4.0

      ##################################
      # Cryptoverse Login Demo Release #
      ##################################
      - name: Install Cryptoverse Login Demo
        run: |
          cd tests/cryptoverse-login-demo/
          gpg --quiet --batch --yes --decrypt \
            --passphrase="${{ secrets.VALUES_ENCRYPTION_PASSPHRASE_LOGIN_DEMO }}" \
            --output ./charts/demo/values.prod.yaml ./charts/demo/values.prod.yaml.gpg
          doctl kubernetes cluster kubeconfig save cryptoverse --expiry-seconds 300 --set-current-context
          helm upgrade --install --create-namespace --atomic --wait --timeout 10m \
            cryptoverse-login-demo \
            ./charts/demo/ \
            --namespace cryptoverse-login-demo \
            -f ./charts/demo/values.prod.yaml \
            --set version=${{ github.sha }}
